{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-entries/add-entries.component.html","./src/app/app.component.html","./src/app/edit/edit.component.html","./src/app/home/home.component.html","./src/app/login-guest/login-guest.component.html","./src/app/register-guest/register-guest.component.html","./src/app/view-entries/view-entries.component.html","./src/app/add-entries/add-entries.component.css","./src/app/add-entries/add-entries.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/edit/edit.component.css","./src/app/edit/edit.component.ts","./src/app/entries.service.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login-guest/login-guest.component.css","./src/app/login-guest/login-guest.component.ts","./src/app/login.service.ts","./src/app/model/Login.ts","./src/app/model/ResponseObj.ts","./src/app/model/User.ts","./src/app/model/UserEntries.ts","./src/app/register-guest/register-guest.component.css","./src/app/register-guest/register-guest.component.ts","./src/app/view-entries/view-entries.component.css","./src/app/view-entries/view-entries.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\n<table>\\n<tr>\\n    <td>entry type </td>\\n <td>   \\n<div>\\n<select name=\\\"my-select\\\" (change)=\\\"selectChange($event)\\\">\\n    <option [value]=\\\"0\\\" >\\n        select....\\n    </option>\\n    <option [value]=\\\"1\\\" >\\n        text\\n    </option>\\n    <option [value]=\\\"2\\\" >\\n        image\\n    </option>\\n</select>\\n</div>\\n</td></tr>\\n<tr><td>\\n<div *ngIf=\\\"isText\\\">\\n    enter text for entries\\n</div>\\n</td>\\n<td>\\n    <div *ngIf=\\\"isText\\\">\\n      <input type=\\\"textArea\\\" name=\\\"feedback\\\" [(ngModel)]=\\\"userEntries.feedback\\\"/>\\n    </div>\\n    </td>\\n</tr><tr>\\n    <td>\\n<div *ngIf=\\\"isImage\\\">\\n    upload file\\n\\n</div>\\n</td>\\n    <td>\\n    <div *ngIf=\\\"isImage\\\">\\n      \\n        <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\"/>\\n        <input type=\\\"hidden\\\" name=\\\"imgurl\\\" [(ngModel)]=\\\"userEntries.imgurl\\\"/>\\n    </div>\\n    </td>\\n    </tr>\\n    <tr><td><div>\\n        {{message}}\\n    </div></td></tr>\\n    <tr>\\n        <td>\\n                        <div>\\n                            <input type=\\\"button\\\" [disabled]=\\\"enableButton\\\" value=\\\"add entries\\\"(click)=save()/>\\n                        </div>\\n                   \\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n            <div>\\n             \\n                <input type=\\\"button\\\" value=\\\"view Entries\\\"(click)=back()/>\\n            </div>\\n    \\n        </td>\\n    </tr>\\n</table>\\n</div>\\n\"","module.exports = \"<app-home></app-home>\"","module.exports = \"    <div>\\n    <table>\\n    <tr>\\n        <td>entry type :</td>\\n     <td>   \\n    <div>\\n    <select name=\\\"my-select\\\" (change)=\\\"selectChange($event)\\\" [(ngModel)]=\\\"entriesType\\\">\\n        <option [value]=\\\"0\\\" >\\n            select....\\n        </option>\\n        <option [value]=\\\"1\\\" >\\n            text\\n        </option>\\n        <option [value]=\\\"2\\\" >\\n            image\\n        </option>\\n    </select>\\n    </div>\\n    </td></tr>\\n    <tr><td>\\n    <div *ngIf=\\\"isText\\\">\\n        enter text for entries\\n    </div>\\n    </td>\\n    <td>\\n        <div *ngIf=\\\"isText\\\">\\n          <input type=\\\"textArea\\\" name=\\\"feedback\\\" [(ngModel)]=\\\"usersEntriesEdit.feedback\\\"/>\\n        </div>\\n        </td>\\n    </tr>\\n    <tr>\\n        <div *ngIf=\\\"isImage\\\">\\n        <td>\\n        uploaded  file Name:\\n        </td>\\n        <td>\\n            {{usersEntriesEdit.imgurl}}\\n              </td>\\n        </div>\\n    \\n    </tr>\\n    <tr>\\n    <td>\\n            <div *ngIf=\\\"isImage\\\">\\n            \\n            choose file to update\\n            </div>\\n\\n        </td><td>\\n            <div *ngIf=\\\"isImage\\\">\\n        <input type=\\\"file\\\" vlaue=\\\" select file to update\\\"(change)=\\\"selectFile($event)\\\" [(ngModel)]=\\\"usersEntriesEdit.imgurl\\\"/>\\n        \\n        </div>\\n        </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <div>\\n                    <input type=\\\"button\\\" value=\\\"back\\\"(click)=back()/>\\n                </div>\\n        \\n            </td>\\n        </tr>\\n\\n    </table>\\n    <div>\\n    <input type=\\\"button\\\" value=\\\"update entries\\\"(click)=save()/>\\n    </div>\\n    </div>\\n    \"","module.exports = \"<p>Guest Book App</p>\\n\\n<router-outlet></router-outlet>\\n\\n<p>\\\"\\\"</p>\\n\\n<!--\\n<app-register-guest></app-register-guest>\\n<app-login-guest></app-login-guest>\\n<app-add-entries></app-add-entries>\\n<app-view-entries></app-view-entries>\\n-->\"","module.exports = \"<form name=\\\"form\\\"  (ngSubmit)=\\\"onSubmit(f1)\\\" ngNativeValidate>\\n<div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userName\\\" class=\\\"col-sm-2 col-form-label\\\">username</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" value=\\\"\\\" name=\\\"login.name\\\" [(ngModel)]=\\\"login.name\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\" name=\\\"login.password\\\" [(ngModel)]=\\\"login.password\\\">\\n    </div>\\n  </div>\\n  <div calss=\\\"center\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn-login-box\\\" (click)=\\\"onSubmit()\\\">\\n      </div>\\n  </div>\\n\\n  </form>\\n  <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=\\\"go()\\\">Register as New User</a>\\n  \\n  \"","module.exports = \"<form name=\\\"form\\\" #myForm=\\\"ngForm\\\">\\n<div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userName\\\" class=\\\"col-sm-2 col-form-label\\\">username</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\"\\n      required #txtUserName=\\\"ngModel\\\">\\n      <span *ngIf=\\\"txtUserName.invalid && txtUserName.touched\\\" class=\\\"text-danger\\\">User Name is required.</span> \\n    \\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\"  name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"\\n      required #txtUserPass=\\\"ngModel\\\">\\n      <span *ngIf=\\\"txtUserPass.invalid && txtUserName.touched\\\" class=\\\"text-danger\\\">Password is required.</span> \\n      <span *ngIf=\\\"txtUserPass.noWhiteSpace\\\" class=\\\"text-danger\\\">Password is required.</span> \\n    \\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userRole\\\" class=\\\"col-sm-2 col-form-label\\\">Role</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <select name=\\\"my-role\\\" (change)=\\\"selectChange($event)\\\">\\n            <option [value]=\\\"0\\\" >\\n                select....\\n            </option>\\n            <option [value]=\\\"1\\\" >\\n                Admin\\n            </option>\\n            <option [value]=\\\"2\\\" >\\n                User\\n            </option>\\n        </select>\\n        \\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Register as new user\\\" class=\\\"btn-login-box\\\" (click)=\\\"onSubmit()\\\">\\n        </div>\\n        <div>{{message}}</div>\\n  </div>\\n</form>\\n   <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=\\\"goToLoggin()\\\"> login page </a>\\n   <ngx-alerts></ngx-alerts>\"","module.exports = \"<!--div class=\\\"container\\\" *ngIf=\\\"isRecords;else NoRecordFound\\\"-->\\n<div class=\\\"col-sm-12\\\" align=\\\"right\\\">\\n  <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=logout()>logout </a>\\n \\n  </div>  \\n<div class=\\\"container\\\">\\n    <div class=\\\"row row-cols-1 row-cols-sm-2 row-cols-md-5\\\" *ngIf=\\\"isRecords;else NoRecordFound\\\">\\n     <div class=\\\"col\\\" ><b>S.No</b></div>\\n      <div class=\\\"col\\\"><b>Feedback</b></div>\\n      <div class=\\\"col\\\" ><b>Image</b></div>\\n      <div class=\\\"col\\\" ><b>Approved</b></div>\\n      <div [hidden]=\\\"!isAction\\\" class=\\\"col\\\" ><b>Action</b></div>\\n      </div>\\n      <div class=\\\"row row-cols-1 row-cols-sm-2 row-cols-md-5\\\"  *ngFor=\\\"let entries of usersEntriesList\\\">\\n         <div class=\\\"col\\\" >{{entries.id}}</div>\\n          <div class=\\\"col\\\">{{entries.feedback}}</div>\\n            <div class=\\\"col\\\" ><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=downloadfile(entries.id,entries.image)>{{entries.imgurl}}</a>\\n          </div>\\n            <div class=\\\"col\\\"  *ngIf=\\\"entries.isApprove;else elseNotDone\\\"> Approved</div>\\n            <ng-template #elseNotDone>\\n              Not Approved\\n            </ng-template>\\n            <div [hidden]=\\\"!isAction\\\" class=\\\"col\\\" >\\n                  <table>\\n                    <tr>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=approve(entries.id)>Approve </a></td>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=Edit(entries.id)>Edit </a></td>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=Delete(entries.id)>Delete</a></td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n              <!--div>\\n                {{message}}\\n                </div-->\\n\\n                <ng-template #NoRecordFound>\\n                  <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height:100px;\\\">\\n                 <div class=\\\"bg-primary\\\">no record found</div>    \\n             </div>\\n             </ng-template>\\n         \\n\\n      <input type=\\\"button\\\" value=\\\"add new entries\\\" (click)=\\\"addEntries()\\\">\\n      \\n    </div>\\n    <div class=\\\"container row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div *ngIf=retrievedImage>\\n              <img [src]=\\\"retrievedImage\\\">\\n          </div>\\n      </div>\\n  </div>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbnRyaWVzL2FkZC1lbnRyaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { User } from '../model/User';\nimport { UserEntries } from '../model/UserEntries';\n\n\n@Component({\n  selector: 'app-add-entries',\n  templateUrl: './add-entries.component.html',\n  styleUrls: ['./add-entries.component.css']\n})\nexport class AddEntriesComponent implements OnInit {\n  isText = false;\n  isImage = false;\n  myEntries = \"1\";\n  entriesType:any;\n  currentFileUpload: File;\n  selectedFiles: FileList; \n  userEntries = new UserEntries();\n  usr=new User();\n  enableButton=true;\n  message=\"\";\n  usrData;\n  constructor(private entriesService:EntriesService,private route:Router) { }\n\n  ngOnInit() {\n   this.usrData=localStorage.getItem(\"userData\");\n   //this.usr=JSON.parse(this.usrData);\n   this.message=\"\";\n  }\n  selectChange(event: any) {\n    this.message=\"\";\n    this.entriesType = event.target.value;\n    this.enableButton=true;\n   if (this.entriesType === \"1\"){\n    this.isText = true;\n    this.isImage = false;\n    this.enableButton=false;\n   }\n   if (this.entriesType === \"2\"){\n    this.isImage = true;\n    this.isText = false;\n    \n   }\n\n\n  }\n  save(){\n    let usrData=localStorage.getItem(\"userData\");\n    console.log(\"user data in view \"+usrData);\n    this.usr=JSON.parse(usrData);\n    this.userEntries.userId=this.usr.id;\n    console.log(this.usr.id+\"user id in  id \"+this.userEntries.userId);\n  if (this.entriesType === \"1\"){\n    this.entriesService.saveEntries(this.userEntries).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        //this.route.navigate(['/viewEntries']);\n        this.message=\"user entries added successfully\";\n    },\n    error => {\n        console.log('Error: ', error);\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    }); \n }\n if (this.entriesType === \"2\"){\n  this.entriesService.saveEntriesForFiles(this.currentFileUpload,this.usr.id).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.message=data.message;\n    },\n    error => {\n       // console.log('Error: ', error);\n        this.message=\"File Exeeded, it stored limit,please upload file less then 1 MB \";\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    });\n }\n \n\n //this.route.navigate(['/viewEntries']);\n}\n\nback(){\n  this.route.navigate(['/viewEntries']);\n}\nselectFile(event) {  \n  this.message=\"\";\n  const file = event.target.files.item(0);  \n  let filename = file.name ; \n  //alert(\"file type \"+file.type );\n  if (file.type.match('image/*')||file.type.match('image/jpeg')) {  \n    var size = event.target.files[0].size;  \n      this.currentFileUpload=event.target.files[0]; \n      this.selectedFiles = event.target.files;  \n      this.enableButton=false;\n     \n  }else{\n    //alert('invalid file type, please upload image file');\n    this.enableButton=true;\n    this.message=\" Invalid File Type , Please select image file only \";\n  }\n} \n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddEntriesComponent } from './add-entries/add-entries.component';\nimport { AuthGuard } from './auth.guard';\nimport { EditComponent } from './edit/edit.component';\nimport { LoginGuestComponent } from './login-guest/login-guest.component';\nimport { RegisterGuestComponent } from './register-guest/register-guest.component';\nimport { ViewEntriesComponent } from './view-entries/view-entries.component';\n\nconst routes: Routes = [\n  {\n    path: '',  \n    component: LoginGuestComponent\n  },\n  {    \n  path: 'register',  \n  component: RegisterGuestComponent  \n  },\n  \n  {    \n    path: 'addEntries',  \n    component: AddEntriesComponent  \n    },\n    {    \n      path: 'viewEntries',  \n      component: ViewEntriesComponent,\n      canActivate: [AuthGuard]  \n      },\n      {    \n        path: 'editEntries',  \n        component: EditComponent  \n        },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1 {color: brown; border: 2%; text-align: center; border-color: blueviolet; border-style: dotted;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxZQUFZLEVBQUUsVUFBVSxFQUFFLGtCQUFrQixFQUFFLHdCQUF3QixFQUFFLG9CQUFvQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7Y29sb3I6IGJyb3duOyBib3JkZXI6IDIlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlci1jb2xvcjogYmx1ZXZpb2xldDsgYm9yZGVyLXN0eWxlOiBkb3R0ZWQ7fSJdfQ== */\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'this is our angular proram';\n  months = [ \"jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  isAvailalbe = false;\n  toDo = [\"angular Training\"];\n  addItem(){\n    this.toDo.push('item1');\n  }\n  clickFunction(){\n    alert('clicked');\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginGuestComponent } from './login-guest/login-guest.component';\nimport { RegisterGuestComponent } from './register-guest/register-guest.component';\nimport { ViewEntriesComponent } from './view-entries/view-entries.component';\nimport { AddEntriesComponent } from './add-entries/add-entries.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditComponent } from './edit/edit.component';\nimport { AuthGuard } from './auth.guard';\nimport { AlertModule } from 'ngx-alerts';\nimport { LocationStrategy,HashLocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginGuestComponent,\n    RegisterGuestComponent,\n    ViewEntriesComponent,\n    HomeComponent,\n    AddEntriesComponent,\n    EditComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AlertModule.forRoot({maxMessages: 5, timeout: 5000}),\n    AppRoutingModule\n  ],\n  providers: [{provide:LocationStrategy, useClass:HashLocationStrategy},AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements  CanActivate{\n  canActivate(\n    route: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    \n      let usrData=localStorage.getItem(\"userData\");\n      console.log(\"user data in view \"+usrData);\n      \n           return usrData?true:false;\n    \n      }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { User } from '../model/User';\nimport { UserEntries } from '../model/UserEntries';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  usersEntriesEdit:UserEntries;\n  isText = false;\n  isImage = false;\n  myEntries = \"1\";\n  entriesType:any;\n  currentFileUpload: File;\n  selectedFiles: FileList; \n  userEntries = new UserEntries();\n  usr= new User();\n  enableButton=true;\n  message=\"\";\n  \n\n \n  constructor(private route:Router,private entriesService:EntriesService ) { }\n\n  ngOnInit() {\n    let usrData=localStorage.getItem(\"userData\");\n   \n    if(this.entriesService.editVar!==\"0\")\n    this.getSelectedValue(this.entriesService.editVar);\n\n  }\n\n  getSelectedValue(valId){\n    this.entriesService.edit(valId).subscribe(\n      data => {\n        console.log(data.data); \n        this.usersEntriesEdit=data.data;\n        this.loadChange();\n      },\n      error => {\n          //console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n\n  selectChange(event: any) {\n    this.entriesType = event.target.value;\n    this.message=\"\";\n    this.enableButton=true;\n\n   if (this.entriesType === \"1\"){\n    this.isText = true;\n    this.isImage = false;\n    this.enableButton=false;\n\n   }\n   if (this.entriesType === \"2\"){\n    this.isImage = true;\n    this.isText = false;\n    this.enableButton=true;\n    }\n\n\n  }\n\n  loadChange() {\n    this.message=\"\";\n    this.enableButton=true;\n   // console.log(this.usersEntriesEdit.feedback +\" entries type \"+ this.entriesType);\n   if (this.usersEntriesEdit.feedback!=null){\n\n    this.entriesType =\"1\";\n    console.log(this.usersEntriesEdit.feedback +\" entries type \"+ this.entriesType);\n    this.isText = true;\n    this.isImage = false;\n    this.enableButton=false;\n   }\n   if (this.usersEntriesEdit.imgurl!=null){\n     this.entriesType = \"2\";\n    this.isImage = true;\n    this.isText = false;\n    //this.enableButton=true;\n   }\n\n\n  }\n  \n  save(){\n    let usrData=localStorage.getItem(\"userData\");\n    console.log(\"user data in view \"+usrData+\"   \"+this.entriesService.editVar);\n    this.usr=JSON.parse(usrData);\n    this.usersEntriesEdit.userId=this.usr.id;\n    this.usersEntriesEdit.id=Number(this.entriesService.editVar);\n   \n    console.log(this.usr.id+\"user id in  id \"+this.userEntries.userId);\n  if (this.entriesType === \"1\"){\n    this.entriesService.update(this.usersEntriesEdit).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    }); \n }\n if (this.entriesType === \"2\"){\n  this.entriesService.updateEntriesForFiles(this.currentFileUpload,this.usr.id,this.usersEntriesEdit.id).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n        this.message=\"File Exeeded, it stored limit,please upload file less then 1 MB \";\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    });\n }\n \n\n this.route.navigate(['/viewEntries']);\n}\n\nback(){\n  this.route.navigate(['/viewEntries']);\n}\nselectFile(event) {  \n  this.message=\"\";\n  const file = event.target.files.item(0);  \n  let filename = file.name ; \n    if (file.type.match('image/*')||file.type.match('image/jpeg')) {  \n    var size = event.target.files[0].size;  \n      this.currentFileUpload=event.target.files[0]; \n      this.selectedFiles = event.target.files;  \n      this.enableButton=false;\n    \n  }else{\n    //alert('invalid file type, please upload image file');\n    this.enableButton=true;\n    this.message=\" Invalid File Type , Please select image file only \";\n  }\n} \n\n\n\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from './model/User';\nimport { UserEntries } from './model/UserEntries';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntriesService {\n  createAPI = \"http://localhost:8080/createEntries\";\n  //createAPIForFiles = \"http://localhost:8080/createEntriesForFiles\";\n  createAPIForFiles = \"http://localhost:8080/storeFileData\";\n  updateAPIForFiles = \"http://localhost:8080/updateStoreFileData\";\n  getAllEntries = \"http://localhost:8080/getEntriesList\";\n  getEntriesByUserId =\"http://localhost:8080/secured/getEntriesList\";\n  approveAPI = \"http://localhost:8080/isApproveEntry\";\n  updateAPI = \"http://localhost:8080/open/updateEntries\";;\n  deleteAPI = \"http://localhost:8080/deleteEntries\";\n  downLoadfile = \"http://localhost:8080/downLoadfile\";\n  selectedPageAPI = \"http://localhost:8080/getSelectedEntry\";\n  constructor(private http: HttpClient) { }\n  editVar=\"0\"; \n  isApprove(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.approveAPI+\"?id=\"+valId);\n\n  }\n  update(userEntries):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.put(this.updateAPI,userEntries);\n\n  }\n\n  \n  edit(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.selectedPageAPI+\"?id=\"+valId);\n  }\n  delete(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.deleteAPI+\"?id=\"+valId);\n\n  }\n\n  getEntriesList(usr:User):Observable<any>{\n     const body = new HttpParams()\n     const httpOptions = {\n       headers: new HttpHeaders({\n         'Content-Type':  'application/json',\n         'Accept': '*/*' \n       })\n     };\n    if(usr.userRole==='admin'){\n    return this.http.get(this.getEntriesByUserId+\"?id=\"+0);\n    }else{\n    return this.http.get(this.getEntriesByUserId+\"?id=\"+usr.id);\n    }\n \n   }\n  saveEntries(userEntries:UserEntries):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.post(this.createAPI,userEntries);\n}\n\nupdateEntriesForFiles(file : File , useruserId :any,id: any):Observable<any>{\n  console.log(\"useruserId \"+useruserId);\n  const formdata: FormData = new FormData();  \n  formdata.append('file', file);\n  formdata.append('userId', useruserId);\n  formdata.append('Id', id);\n   const body = new HttpParams()\n   const httpOptions = {\n     headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n       'Accept': '*/*' \n     })\n   };\n  return this.http.put(this.updateAPIForFiles,formdata);\n\n }\n  saveEntriesForFiles(file : File , useruserId :any):Observable<any>{\n    \n    console.log(\"useruserId \"+useruserId);\n    const formdata: FormData = new FormData();  \n    formdata.append('file', file);\n    formdata.append('userId', useruserId);\n     const body = new HttpParams()\n     const httpOptions = {\n       headers: new HttpHeaders({\n         'Content-Type':  'application/json',\n         'Accept': '*/*' \n       })\n     };\n    return this.http.post(this.createAPIForFiles,formdata);\n \n   }\n\n   downloadfile(valId):Observable<Blob>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*',\n        }),\n        \n        responseType : 'blob' as 'json',\n    };\n  console.log('gettin response');\n  return this.http.post<Blob>(this.downLoadfile,valId,httpOptions);\n }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLWd1ZXN0L2xvZ2luLWd1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { Login } from '../model/Login';\nimport { User } from '../model/User';\nimport { ResponseObj } from '../model/ResponseObj';\n\n@Component({\n  selector: 'app-login-guest',\n  templateUrl: './login-guest.component.html',\n  styleUrls: ['./login-guest.component.css']\n})\nexport class LoginGuestComponent implements OnInit {\n  login =  new Login();\n  user = new User();\n  obj = new ResponseObj();\n  message : string;\n  constructor(private route:Router,private loginService:LoginService) { }\n\n  ngOnInit() {\n  this.message=this.loginService.message;\n  }\ngo(){\n  \n  this.route.navigate(['/register']);\n}\n\nonSubmit(form:NgForm){\n  this.loginService.signin(this.login).subscribe(\n    data => { // json data\n        //console.log('Success: ', data);\n        let usrData=JSON.stringify(data.data);\n        this.user = JSON.parse(usrData);\n        //console.log('user2: ',  usrData );\n        //console.log('user3: ', this.user.id+\" name \"+this.user.userName );\n        localStorage.setItem(\"userData\",usrData);\n        if(data.code===200)\n        this.route.navigate(['/viewEntries']);\n        else\n        this.message=data.message;\n    },\n    error => {\n        console.log('Error: ', error);\n     });\n\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http'\nimport { Login } from './model/Login';\nimport { Observable } from 'rxjs';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  message : string;\n  accessToken : any ;\n  API = \"http://localhost:8080/open/login\";\n  SecureAPI = \"http://localhost:8080/secured/login\";\n  \n  registerAPI = \"http://localhost:8080/open/register\";\n  constructor(private http: HttpClient) { }\n  /*\n  signin(login:Login):Observable<any>{\n    console.log(\"geting token \"+this.API);\n    const body = new HttpParams()\n    .set('username', login.name)\n    .set('password', login.password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/html',*/\n     // 'Accept': '*/*' \n    /*  })\n      \n   // };\n   //return this.http.get(this.API+\"?username=\"+login.name+\"&password=\"+login.password);\n\n  }*/\n\n\n  signin(login:Login):Observable<any>{\n    console.log(\"getting token \"+this.SecureAPI);\n    const body = new HttpParams()\n   .set('username', login.name)\n   .set('password', login.password);\n   \n   const httpOptions = {\n     headers: new HttpHeaders({\n       'Content-Type':  'application/json',\n       'Accept': '*/*'\n     })\n     \n   };\n \n    return this.http.post<Login>(this.SecureAPI,body);\n \n   //return this.http.get(this.API+\"?username=\"+login.name+\"&password=\"+login.password);\n\n  }\n  register(user:User):Observable<any>{\n    this.message=\"\";\n    console.log(\"geting token \"+this.API);\n    const body = new HttpParams()\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n      \n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n      \n    };\n   return this.http.post(this.registerAPI,user);\n\n  }\n}\n","export class Login{\r\n    name : string ;\r\n    password : string ;\r\n}","export class ResponseObj{\n    data:{};\n    status:string;\n    message:string;\n    code:number;\n}","export class User{\r\n    userName : string ;\r\n    password : string ;\r\n    userRole : string;\r\n     id : number;\r\n\t}","export class UserEntries{\r\n    feedback : string ;\r\n    imgurl : string ;\r\n    id : number;\r\n    isApprove :number;\r\n    userId :number;\r\n    filename: string ;\r\n\tfiletype: string ;\r\n\tfiledata :any;\r\n\t\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLWd1ZXN0L3JlZ2lzdGVyLWd1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { LoginService } from '../login.service';\nimport { User } from '../model/User';\nimport { AlertService } from 'ngx-alerts';\n\n@Component({\n  selector: 'app-register-guest',\n  templateUrl: './register-guest.component.html',\n  styleUrls: ['./register-guest.component.css']\n})\nexport class RegisterGuestComponent implements OnInit {\n  user =  new User();\n  entriesType:any;\n  message=\"\";\n \n  constructor(private route:Router, private loginService:LoginService ,\n    private alertService: AlertService) {\n\n      }\n   \n\n  ngOnInit() {\n   this.message=\"\";\n  }\n  goToLoggin(){\n    this.route.navigate(['']);\n  }\n\n  onSubmit(){\n    if(this.user.userName.trim().length> 0 && this.user.password.trim().length>0 && !(this.user.userRole===undefined)){\n      this.loginService.register(this.user).subscribe(\n      data => { // json data\n         // console.log('Success: ', data);\n          if(data.code===200)\n          this.loginService.message=data.message;\n          else\n          this.loginService.message=\"error while registering usr pls try again\";\n          this.route.navigate(['']);\n      },\n      error => {\n        this.loginService.message=\"error while registering usr pls try again\";\n      });\n    }else{\n      this.message=\"either user name or password or role is empty, pls try again\";\n    }\n  \n  }\n\n  selectChange(event: any) {\n    this.entriesType = event.target.value;\n\n   if (this.entriesType === \"1\"){\n    this.user.userRole = 'admin';\n   }\n   if (this.entriesType === \"2\"){\n    this.user.userRole = 'user';\n    \n   }\n\n}\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXctZW50cmllcy92aWV3LWVudHJpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { UserEntries } from '../model/UserEntries';\nimport { saveAs } from 'file-saver';\nimport { User } from '../model/User';\n\n@Component({\n  selector: 'app-view-entries',\n  templateUrl: './view-entries.component.html',\n  styleUrls: ['./view-entries.component.css']\n})\nexport class ViewEntriesComponent implements OnInit {\n\n  constructor(private route:Router,private entriesService:EntriesService) { \n    console.log('constor'); \n    this.loadData(); \n\n  }\n  usersEntriesList:Array<any>=[];\n  usr= new User()\n  message:string;  \n  isRecords=false;\n  isAction:boolean;\n  ngOnInit() {\n    console.log('oninit');\n    this.loadData(); \n  }\n\n  loadData(){\n    \n    console.log(\"user data in view \");\n    let usrData=localStorage.getItem(\"userData\");\n    console.log(\"user data in view \"+usrData);\n    this.usr=JSON.parse(usrData);\n    //this.usersEntriesList;\n    console.log(\"user role\"+this.usr.userRole);\n    if(this.usr.userRole==='admin')\n    this.isAction=true;\n    else\n    this.isAction=false;\n\n    this.entriesService.getEntriesList(this.usr).subscribe(\n      data => { \n        console.log(data.code +'  message'+data.message);\n        console.log(data.code +'  message'+data.code);\n        if(data.code===200)\n        {//this.route.navigate(['/viewEntries']);\n          this.usersEntriesList=data.data;\n          this.isRecords=true;\n      }if(data.code===403)\n      { \n        //alert(\"error\");\n       // this.route.navigate(['']);\n      }\n      else{\n        this.message=data.message;\n        this.route.navigate(['/viewEntries']);\n      }\n        \n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n  }\n  addEntries(){\n  this.route.navigate(['/addEntries']);\n  }\n  approve(valId){\n    //alert('selected id is  '+valId);\n    this.entriesService.isApprove(valId).subscribe(\n      data => { // json data\n        this.ngOnInit();\n        // alert('Appoved');\n         //this.route.navigate(['/viewEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n  update(userEntries){\n    //alert('selected id is  '+userEntries.id);\n    this.entriesService.update(userEntries).subscribe(\n      data => { // json data\n        // alert('Edit');\n         this.route.navigate(['/updateEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n  Edit(valId){\n    this.entriesService.editVar=valId;\n    this.route.navigate(['/editEntries']);\n  }\n  \n  Delete(valId){\n    //alert('selected id is  '+valId);\n    this.entriesService.delete(valId).subscribe(\n      data => { // json data\n        // alert('Deleted');\n         this.ngOnInit();\n         //this.route.navigate(['/viewEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n \n  downloadfile(valId){\n\nconsole.log('downloading file');\n    this.entriesService.downloadfile(valId).subscribe(\n      (response) => {\n         //alert('downloaded'+response);\n         this.downloadFile(response);\n      },\n      error => {\n          console.log('Error: ');\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n\n    }\n\n    downloadFile(data) {\n      const blob = new Blob([data], { type : 'application/*' });\n      const file = new File([blob], \"photo5\" + '.jpg', { type: 'application/*' });\n      saveAs(file);\n  }\n\n  logout(){\n    localStorage.clear();\n    let usrData=localStorage.getItem(\"userData\");\n    //console.log(\"user data in view \"+usrData);\n    //alert(usrData);\n    this.route.navigate(['']);\n    \n             \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}